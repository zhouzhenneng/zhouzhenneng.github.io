{"version":3,"file":"component---src-pages-articles-js-b2f5b2981f6ebcc8902c.js","mappings":"2LAEaA,EAAOC,EAAAA,QAAAA,IAAAA,WAAH,yDAAGA,CAAH,kC,UCajB,EAZa,SAAC,GAAmB,IAAD,IAAhBC,KAAAA,OAAgB,MAAT,GAAS,EAC9B,OACE,uBAAKC,UAAU,QACZD,EAAKE,KAAI,SAACC,EAAKC,GAAN,OACR,wBAAMC,IAAKD,EAAOH,UAAS,OAASK,EAAAA,EAAYH,IAC9C,8BAASA,S,oBCCbI,EAASR,EAAAA,QAAAA,IAAAA,WAAH,0DAAGA,CAAH,yCAINS,EAAeT,EAAAA,QAAAA,IAAAA,WAAH,gEAAGA,CAAH,qDAEPU,EAAAA,EAAAA,WAGEA,EAAAA,EAAAA,cAGPC,GAAcX,EAAAA,EAAAA,SAAOD,GAAV,0EAAGC,CAAH,uBAGXY,EAAUZ,EAAAA,QAAAA,IAAAA,WAAH,2DAAGA,CAAH,sBAkCb,EA9BgB,SAAC,GAAwB,IAAtBa,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACjBC,EAAQF,EAAKG,YAAYD,OAASF,EAAKI,OAAOC,KAC9CC,EAAQ,GAAMC,EAAAA,EAAAA,SAAkBP,EAAKI,OAAOC,KAC5CjB,EAAOY,EAAKG,YAAYf,MAAQ,GAEtC,OACE,uBAAKC,UAAU,OACb,gBAACM,EAAD,KACE,gBAACa,EAAA,EAAD,KACE,gBAACZ,EAAD,KACE,gBAACa,EAAA,EAAD,CAAMC,GAAIJ,GACR,8BAASJ,KAGZD,GAAY,gBAAC,EAAD,CAAMb,KAAMA,KAE1B,gBAACU,EAAD,KAAcE,EAAKG,YAAYQ,OAElC,gBAACZ,EAAD,KAAUC,EAAKG,YAAYS,aAAeZ,EAAKa,SAC/C,2BACE,gBAACJ,EAAA,EAAD,CAAMC,GAAIJ,GACR,0BAAQjB,UAAU,mBAAlB,e,mBC9BV,IAnBoB,CAClByB,WAAY,aACZC,WAAY,aACZC,QAAS,UACTC,KAAI,UACJC,MAAK,aACL,UAAW,YACXC,KAAI,aACJC,KAAI,aACJC,KAAI,UACJC,KAAM,YACNC,UAAS,aACTC,OAAM,aACNC,MAAK,UACLC,MAAK,YACLC,MAAO,aACPC,OAAM,c,kFCRFC,EAAW1C,EAAAA,QAAAA,IAAAA,WAAH,8DAAGA,CAAH,sBAkBd,UAdiB,SAAC,GAAwB,IAAtB2C,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAClBC,EAAYF,EAAKG,KAAKC,aAAahC,MACnCiC,EAAQL,EAAKM,OAAOC,MAE1B,OACE,gBAAC,IAAD,CAAQN,SAAUA,EAAU7B,MAAO8B,GACjC,gBAAC,IAAD,CAAK9B,MAAM,cACX,gBAAC2B,EAAD,KACGM,EAAM7C,KAAI,WAAiBE,GAAjB,IAASQ,EAAT,EAAGsC,KAAH,OAA2B,gBAAC,IAAD,CAAStC,KAAMA,EAAMP,IAAKD,EAAOS,UAAQ","sources":["webpack://gatsby-blog/./src/common-styles/PageInfo.js","webpack://gatsby-blog/./src/components/Tags.js","webpack://gatsby-blog/./src/components/Article/index.js","webpack://gatsby-blog/./src/constants/tags.js","webpack://gatsby-blog/./src/pages/articles.js"],"sourcesContent":["import styled from 'styled-components'\n\nexport const Date = styled.div`\n  font-size: 0.85em;\n  color: #888;\n`\n","import React from 'react'\nimport TAGS_COLORS from 'constants/tags'\n\nconst Tags = ({ tags = [] }) => {\n  return (\n    <div className='tags'>\n      {tags.map((tag, index) => (\n        <span key={index} className={`tag ${TAGS_COLORS[tag]}`}>\n          <strong>{tag}</strong>\n        </span>\n      ))}\n    </div>\n  )\n}\n\nexport default Tags\n","import React from 'react'\nimport styled from 'styled-components'\nimport Link from 'common-styles/Link'\nimport { FlexCenter } from 'common-styles/Flex'\nimport { Date } from 'common-styles/PageInfo'\nimport Tags from 'components/Tags'\nimport COLORS from 'constants/colors'\nimport ROUTES from 'constants/routes'\n\nconst Header = styled.div`\n  display: flex;\n  flex-direction: column;\n`\nconst ArticleTitle = styled.div`\n  margin-right: 1em;\n  color: ${COLORS.FONT_BLACK};\n\n  & a:hover {\n    color: ${COLORS.FONT_PRIMARY};\n  }\n`\nconst ArticleDate = styled(Date)`\n  margin-top: 0.5em;\n`\nconst Content = styled.div`\n  padding: 0.8em 0;\n`\n\nconst Article = ({ post, showTags }) => {\n  const title = post.frontmatter.title || post.fields.slug\n  const postLink = `${ROUTES.ARTICLES}${post.fields.slug}`\n  const tags = post.frontmatter.tags || []\n\n  return (\n    <div className='box'>\n      <Header>\n        <FlexCenter>\n          <ArticleTitle>\n            <Link to={postLink}>\n              <strong>{title}</strong>\n            </Link>\n          </ArticleTitle>\n          {showTags && <Tags tags={tags} />}\n        </FlexCenter>\n        {<ArticleDate>{post.frontmatter.date}</ArticleDate>}\n      </Header>\n      <Content>{post.frontmatter.description || post.excerpt}</Content>\n      <div>\n        <Link to={postLink}>\n          <button className='button is-small'>\n            {`继续阅读 >`}\n          </button>\n        </Link>\n      </div>\n    </div>\n  )\n}\n\nexport default Article\n","const TAGS_COLORS = {\n  typescript: 'is-primary',\n  javascript: 'is-warning',\n  webpack: 'is-link',\n  网络: 'is-info',\n  浏览器: 'is-success',\n  'Node.js': 'is-danger',\n  摘抄: 'is-primary',\n  CSS: 'is-warning',\n  面试: 'is-info',\n  todo: 'is-danger',\n  算法与数据结构: 'is-success',\n  阅读写作: 'is-primary',\n  编辑器: 'is-link',\n  工程化: 'is-danger',\n  react: 'is-warning',\n  设计模式: 'is-danger'\n}\n\nexport default TAGS_COLORS\n","import React from 'react'\nimport { graphql } from 'gatsby'\nimport styled from 'styled-components'\n\nimport Layout from 'components/Layout'\nimport Seo from 'components/SEO'\nimport Article from 'components/Article'\n\nconst PostWrap = styled.div`\n  margin: 0 0 40px;\n`\n\nconst Articles = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title\n  const posts = data.allMdx.edges\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title='All posts' />\n      <PostWrap>\n        {posts.map(({ node: post }, index) => <Article post={post} key={index} showTags />)}\n      </PostWrap>\n    </Layout>\n  )\n}\n\nexport default Articles\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMdx(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { layout: { eq: \"blog-post\" } } }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"YYYY-MM-DD\")\n            title\n            description\n            tags\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["Date","styled","tags","className","map","tag","index","key","TAGS_COLORS","Header","ArticleTitle","COLORS","ArticleDate","Content","post","showTags","title","frontmatter","fields","slug","postLink","ROUTES","Flex","Link","to","date","description","excerpt","typescript","javascript","webpack","网络","浏览器","摘抄","CSS","面试","todo","算法与数据结构","阅读写作","编辑器","工程化","react","设计模式","PostWrap","data","location","siteTitle","site","siteMetadata","posts","allMdx","edges","node"],"sourceRoot":""}