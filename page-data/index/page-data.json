{"componentChunkName":"component---src-pages-index-js","path":"/","result":{"data":{"site":{"siteMetadata":{"title":"周大丢的blog"}},"allMdx":{"edges":[{"node":{"excerpt":"最近面了阿里和蚂蚁，感觉自己离大厂的要求还有点距离，针对面试中回答的不好的知识点进行复盘，加油💪🏻！ 09.21 蚂蚁-国际化二面 1.get和post的区别 a.语义上（specification）的区别： 根据技术规格文档，get和post…","fields":{"slug":"/0013_面试复盘/"},"frontmatter":{"date":"2022-09-20","title":"面试复盘系列（一）","description":"最近面了阿里和蚂蚁，针对面试中的一些知识点进行复盘","tags":["面试"]}}},{"node":{"excerpt":"前言 React支持两种形式的组件，分别是class组件和function组件。 class组件是通过继承模板类(Component, PureComponent…","fields":{"slug":"/0011_React_hooks/"},"frontmatter":{"date":"2022-08-03","title":"常见的React Hooks解析","description":"探究常见的React Hook的用法和原理","tags":["react"]}}},{"node":{"excerpt":"浏览器的同源策略(Same origin policy)是由Netscape公司1995引入的，主要是为了防止XSS（跨站脚本），CSFR（跨站请求伪造）等攻击。但是有时候需要跨域，所以本文会介绍几种常见的方法去规避浏览器的同源策略。 概念 假设，你在浏览器上打开A,B…","fields":{"slug":"/0006_同源策略和跨域/"},"frontmatter":{"date":"2022-07-18","title":"同源策略和跨域","description":"浏览器的同源策略，常见几种跨域实现方式","tags":["网络"]}}},{"node":{"excerpt":"最近在做一个UI组件库项目，记录一下配置webpack的过程，技术栈为webpack + react + typescript 前言 我们先对比一下gulp, webpack和vite…","fields":{"slug":"/0004_webpack工程化配置/"},"frontmatter":{"date":"2022-07-15","title":"webpack工程化配置","description":"webpack工程化，config","tags":["webpack"]}}},{"node":{"excerpt":"今天我们一起探究一下useState的实现原理 前言 在React函数组件hooks中，我们用的最多的应该就是useState了，但是我们真的了解它的原理吗？先让我们一起来看一个例子:  很简单，这就是页面上有一个button组件，点击+1，count显示的数字就加…","fields":{"slug":"/0005_useState原理解析/"},"frontmatter":{"date":"2022-07-13","title":"useState原理解析","description":"React useState原理，手写useState","tags":["react"]}}}]}},"pageContext":{}},"staticQueryHashes":["440568431","63159454","946521183"]}