{"componentChunkName":"component---src-pages-index-js","path":"/","result":{"data":{"site":{"siteMetadata":{"title":"周大丢的blog"}},"allMdx":{"edges":[{"node":{"excerpt":"浏览器的同源策略(Same origin policy)是由Netscape公司1995引入的，主要是为了防止XSS（跨站脚本），CSFR（跨站请求伪造）等攻击。但是有时候需要跨域，所以本文会介绍几种常见的方法去规避浏览器的同源策略。 概念 假设，你在浏览器上打开A,B…","fields":{"slug":"/0006_同源策略和跨域/"},"frontmatter":{"date":"2022-07-18","title":"同源策略和跨域","description":"浏览器的同源策略，常见几种跨域实现方式","tags":["网络"]}}},{"node":{"excerpt":"","fields":{"slug":"/0005_useState原理解析/"},"frontmatter":{"date":"2022-07-13","title":"useState原理解析","description":"React, useState原理，手写useState","tags":["react"]}}},{"node":{"excerpt":"面试中，经常会让你手写防抖和节流，如果你还不知道，赶紧学起来吧 什么是防抖和节流 关于防抖（debounce）和节流（throttle）有个经典的比喻：\n有一个电梯，不考虑容量限制，有两种运行模式debounce和throttle，超时timer设置为15s…","fields":{"slug":"/0002_手写防抖节流/"},"frontmatter":{"date":"2022-06-23","title":"手写防抖节流","description":"介绍防抖节流，手写并测试","tags":["javascript"]}}},{"node":{"excerpt":"","fields":{"slug":"/0004_webpack工程化配置/"},"frontmatter":{"date":"2022-06-15","title":"webpack工程化配置","description":"webpack工程化，config","tags":["webpack"]}}},{"node":{"excerpt":"","fields":{"slug":"/0009_CSS垂直居中方法汇总/"},"frontmatter":{"date":"2022-06-09","title":"CSS垂直居中的方法汇总","description":"CSS常见实现垂直居中的方法","tags":["CSS"]}}}]}},"pageContext":{}},"staticQueryHashes":["440568431","63159454","946521183"]}